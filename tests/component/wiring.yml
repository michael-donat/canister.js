parameters:
  my.parameter: parameterValue
components:
  my.module: {module: ./fixture}
  my.property: {property: ./fixture::A}
  my.property.class: {property: ./fixture::SomeClass }
  my.singleton:
    class: ./fixture::SomeClass
    with:
      - string value
      - 123
      - '@my.property'
      - '@my.parameter'
  my.instance:
    class: ./fixture::SomeClass
    transient: true
  my.module.class.singleton:
    class: ./class
    with:
      - string value
  my.module.class.instance:
    class: ./class
    with:
      - string value
    transient: true
  node.path:
    module: path
  node.path.join:
    property: path::join
  my.tagged.service:
    class: ./fixture::TaggedClass
    tags:
      'tag key': 'tag value'
      otherTag: 'otherValue'
    call:
      - method: 'setA'
        with:
        - [1,2,3]
      - method: 'setB'
        with:
          - string value
          - 123
          - '@my.property'
          - '@my.parameter'
  my.factory.function:
    factory: './fixture::factoryFunction'
    with:
      - 1
      - '@my.parameter'
  my.factory:
    factory: './factory'
    with:
      - 2
      - '@my.property'
  my.transient.factory:
    factory: './fixture::factoryFunction'
    with:
      - 3
    transient: true
  my.nested.constructor:
    class: ./fixture::SomeClass
    with:
      - {prop: '@my.parameter', more: { param: '@my.parameter' }}
  my.nested.factory:
    class: ./fixture::factoryFunction
    with:
      - {prop: '@my.parameter', more: { param: '@my.parameter' }}


